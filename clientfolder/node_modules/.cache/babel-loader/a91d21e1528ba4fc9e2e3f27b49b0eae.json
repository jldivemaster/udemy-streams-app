{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Development/projects/udemy-streams-app/client/src/components/GoogleAuth.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\n\nclass GoogleAuth extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        this.props.signIn();\n      } else {\n        this.props.signOut();\n      }\n    };\n\n    this.onSignInClick = () => {\n      this.auth.signIn();\n    };\n\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: '963311678002-lg1l4hlp9aiuk8tmse9lcs8q6qnvulti.apps.googleusercontent.com',\n        scope: 'email'\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.onAuthChange(this.auth.isSignedIn.get());\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  renderAuthButton() {\n    if (this.props.isSignedIn === null) {\n      return null;\n    } else if (this.props.isSignedIn) {\n      return React.createElement(\"button\", {\n        className: \"ui red google button\",\n        onClick: this.onSignOutClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"google icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), \"Sign Out\");\n    } else {\n      return React.createElement(\"button\", {\n        className: \"ui red google button\",\n        onClick: this.onSignInClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"google icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), \"Sign In With Google\");\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Google Auth\", this.renderAuthButton());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn,\n  signOut\n})(GoogleAuth);","map":{"version":3,"sources":["/Users/flatironschool/Development/projects/udemy-streams-app/client/src/components/GoogleAuth.js"],"names":["React","connect","signIn","signOut","GoogleAuth","Component","onAuthChange","isSignedIn","props","onSignInClick","auth","onSignOutClick","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","get","listen","renderAuthButton","render","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,YAAhC;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAevCC,YAfuC,GAevBC,UAAD,IAAgB;AAC7B,UAAGA,UAAH,EAAe;AACb,aAAKC,KAAL,CAAWN,MAAX;AACD,OAFD,MAEO;AACL,aAAKM,KAAL,CAAWL,OAAX;AACD;AACF,KArBsC;;AAAA,SAuBvCM,aAvBuC,GAuBvB,MAAM;AACpB,WAAKC,IAAL,CAAUR,MAAV;AACD,KAzBsC;;AAAA,SA2BvCS,cA3BuC,GA2BtB,MAAM;AACrB,WAAKD,IAAL,CAAUP,OAAV;AACD,KA7BsC;AAAA;;AAEvCS,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACrCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACvBC,QAAAA,QAAQ,EAAE,0EADa;AAEvBC,QAAAA,KAAK,EAAE;AAFgB,OAAxB,EAGEC,IAHF,CAGO,MAAM;AACZ,aAAKV,IAAL,GAAYG,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ;AACC,aAAKhB,YAAL,CAAkB,KAAKI,IAAL,CAAUH,UAAV,CAAqBgB,GAArB,EAAlB;AACD,aAAKb,IAAL,CAAUH,UAAV,CAAqBiB,MAArB,CAA4B,KAAKlB,YAAjC;AACD,OAPA;AAQD,KATD;AAUD;;AAkBDmB,EAAAA,gBAAgB,GAAG;AACjB,QAAG,KAAKjB,KAAL,CAAWD,UAAX,KAA0B,IAA7B,EAAmC;AACjC,aAAO,IAAP;AACD,KAFD,MAEQ,IAAG,KAAKC,KAAL,CAAWD,UAAd,EAA0B;AAChC,aACE;AAAQ,QAAA,SAAS,EAAC,sBAAlB;AAAyC,QAAA,OAAO,EAAE,KAAKI,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,aADF;AAMA,KAPM,MAOA;AACN,aACE;AAAQ,QAAA,SAAS,EAAC,sBAAlB;AAAyC,QAAA,OAAO,EAAE,KAAKF,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,wBADF;AAMD;AACF;;AAEDiB,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC,KAAKD,gBAAL,EADD,CADF;AAKD;;AAzDsC;;AA4DzC,MAAME,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AAAErB,IAAAA,UAAU,EAAEqB,KAAK,CAAClB,IAAN,CAAWH;AAAzB,GAAP;AACD,CAFD;;AAIA,eAAeN,OAAO,CAAC0B,eAAD,EACpB;AAAEzB,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CADoB,CAAP,CACQC,UADR,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\n\nclass GoogleAuth extends React.Component {\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n       clientId: '963311678002-lg1l4hlp9aiuk8tmse9lcs8q6qnvulti.apps.googleusercontent.com',\n       scope: 'email'\n     }).then(() => {\n       this.auth = window.gapi.auth2.getAuthInstance();\n        this.onAuthChange(this.auth.isSignedIn.get());\n       this.auth.isSignedIn.listen(this.onAuthChange);\n     })\n    })\n  };\n\n  onAuthChange = (isSignedIn) => {\n    if(isSignedIn) {\n      this.props.signIn();\n    } else {\n      this.props.signOut();\n    }\n  };\n\n  onSignInClick = () => {\n    this.auth.signIn();\n  };\n\n  onSignOutClick = () => {\n    this.auth.signOut();\n  };\n\n  renderAuthButton() {\n    if(this.props.isSignedIn === null) {\n      return null;\n    }  else if(this.props.isSignedIn) {\n      return (\n        <button className=\"ui red google button\" onClick={this.onSignOutClick}>\n          <i className=\"google icon\" />\n        Sign Out\n        </button>\n\n    )} else {\n      return (\n        <button className=\"ui red google button\" onClick={this.onSignInClick}>\n          <i className=\"google icon\" />\n        Sign In With Google\n        </button>\n    )\n    }\n  };\n\n  render() {\n    return (\n      <div>Google Auth\n      {this.renderAuthButton()}\n      </div>\n    );\n  };\n}\n\nconst mapStateToProps = (state) => {\n  return { isSignedIn: state.auth.isSignedIn }\n};\n\nexport default connect(mapStateToProps,\n  { signIn, signOut })(GoogleAuth);\n"]},"metadata":{},"sourceType":"module"}