{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Development/projects/udemy-streams-app/clientfolder/src/components/streams/StreamDelete.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\nimport Modal from '../Modal';\nimport history from '../../history';\n\nclass StreamDelete extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  renderActions() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"ui button negative\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Delete2\"), React.createElement(\"button\", {\n      className: \"ui button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Cancel2\"));\n  }\n\n  renderContent() {\n    if (!this.props.stream) {\n      return 'Are you sure?';\n    }\n\n    return \"Are you sure you want to delete stream: \".concat(this.props.stream.title, \"?\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"StreamDelete\", React.createElement(Modal, {\n      title: \"Delete Stream\",\n      content: \"Are you really sure?\",\n      actions: this.renderActions(),\n      onDismiss: () => history.push('/'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamDelete);","map":{"version":3,"sources":["/Users/flatironschool/Development/projects/udemy-streams-app/clientfolder/src/components/streams/StreamDelete.js"],"names":["React","connect","fetchStream","Modal","history","StreamDelete","Component","componentDidMount","props","match","params","id","renderActions","renderContent","stream","title","render","push","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;;AAEA,MAAMC,YAAN,SAA2BL,KAAK,CAACM,SAAjC,CAA2C;AAEzCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWN,WAAX,CAAuB,KAAKM,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;AAEDC,EAAAA,aAAa,GAAG;AAChB,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,CADF;AAKE;;AAEFC,EAAAA,aAAa,GAAG;AACd,QAAG,CAAC,KAAKL,KAAL,CAAWM,MAAf,EAAsB;AACpB,aAAO,eAAP;AACD;;AACD,6DAAkD,KAAKN,KAAL,CAAWM,MAAX,CAAkBC,KAApE;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAC,eADR;AAEE,MAAA,OAAO,EAAC,sBAFV;AAGE,MAAA,OAAO,EAAE,KAAKJ,aAAL,EAHX;AAIE,MAAA,SAAS,EAAE,MAAMR,OAAO,CAACa,IAAR,CAAa,GAAb,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AASA;;AAhCuC;;AAmC3C,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AAAEN,IAAAA,MAAM,EAAEK,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACX,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACD,CAFD;;AAIA,eAAeV,OAAO,CAACiB,eAAD,EAAkB;AAAEhB,EAAAA;AAAF,CAAlB,CAAP,CAA0CG,YAA1C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\nimport Modal from '../Modal';\nimport history from '../../history';\n\nclass StreamDelete extends React.Component {\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  };\n\n  renderActions() {\n  return (\n    <React.Fragment>\n      <button className=\"ui button negative\">Delete2</button>\n      <button className=\"ui button\">Cancel2</button>\n    </React.Fragment>\n  )};\n\n  renderContent() {\n    if(!this.props.stream){\n      return 'Are you sure?'\n    }\n    return `Are you sure you want to delete stream: ${this.props.stream.title}?`\n  };\n\n  render() {\n\n    return (\n      <div>StreamDelete\n        <Modal\n          title=\"Delete Stream\"\n          content=\"Are you really sure?\"\n          actions={this.renderActions()}\n          onDismiss={() => history.push('/')}\n        />\n      </div>\n  )};\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { stream: state.streams[ownProps.match.params.id] }\n};\n\nexport default connect(mapStateToProps, { fetchStream })(StreamDelete);\n"]},"metadata":{},"sourceType":"module"}