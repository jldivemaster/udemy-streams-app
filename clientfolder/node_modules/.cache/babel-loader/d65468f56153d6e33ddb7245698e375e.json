{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Development/projects/udemy-streams-app/clientfolder/src/components/streams/StreamDelete.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, deleteStream } from '../../actions';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport { Link } from 'react-router-dom';\n\nclass StreamDelete extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  renderActions() {\n    const id = this.props.match.params.id;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.props.deleteStream(id),\n      className: \"ui button negative\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Delete2\"), React.createElement(Link, {\n      to: \"/\",\n      className: \"ui button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Cancel2\"));\n  }\n\n  renderContent() {\n    if (!this.props.stream) {\n      return 'Are you sure?';\n    }\n\n    return \"Are you sure you want to delete stream: \".concat(this.props.stream.title, \"?\");\n  }\n\n  render() {\n    return React.createElement(Modal, {\n      title: \"Delete Stream\",\n      content: this.renderContent(),\n      actions: this.renderActions(),\n      onClose: () => history.push('/'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  deleteStream\n})(StreamDelete);","map":{"version":3,"sources":["/Users/flatironschool/Development/projects/udemy-streams-app/clientfolder/src/components/streams/StreamDelete.js"],"names":["React","connect","fetchStream","deleteStream","Modal","history","Link","StreamDelete","Component","componentDidMount","props","match","params","id","renderActions","renderContent","stream","title","render","push","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,eAA1C;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,YAAN,SAA2BP,KAAK,CAACQ,SAAjC,CAA2C;AAEzCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWR,WAAX,CAAuB,KAAKQ,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;AAEDC,EAAAA,aAAa,GAAG;AACd,UAAMD,EAAE,GAAG,KAAKH,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAnC;AAEA,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKH,KAAL,CAAWP,YAAX,CAAwBU,EAAxB,CAAvB;AAAoD,MAAA,SAAS,EAAC,oBAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,SAAS,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,CADF;AAKA;;AAEFE,EAAAA,aAAa,GAAG;AACd,QAAG,CAAC,KAAKL,KAAL,CAAWM,MAAf,EAAsB;AACpB,aAAO,eAAP;AACD;;AACD,6DAAkD,KAAKN,KAAL,CAAWM,MAAX,CAAkBC,KAApE;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAEP,WACI,oBAAC,KAAD;AACE,MAAA,KAAK,EAAC,eADR;AAEE,MAAA,OAAO,EAAE,KAAKH,aAAL,EAFX;AAGE,MAAA,OAAO,EAAE,KAAKD,aAAL,EAHX;AAIE,MAAA,OAAO,EAAE,MAAMT,OAAO,CAACc,IAAR,CAAa,GAAb,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAOA;;AAhCuC;;AAmC3C,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AAAEN,IAAAA,MAAM,EAAEK,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACX,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACD,CAFD;;AAIA,eAAeZ,OAAO,CAACmB,eAAD,EAAkB;AAAElB,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAlB,CAAP,CAAwDI,YAAxD,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, deleteStream } from '../../actions';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport { Link } from 'react-router-dom';\n\nclass StreamDelete extends React.Component {\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  };\n\n  renderActions() {\n    const id = this.props.match.params.id;\n\n    return (\n      <React.Fragment>\n        <button onClick={() => this.props.deleteStream(id)} className=\"ui button negative\">Delete2</button>\n        <Link to=\"/\" className=\"ui button\">Cancel2</Link>\n      </React.Fragment>\n  )};\n\n  renderContent() {\n    if(!this.props.stream){\n      return 'Are you sure?'\n    }\n    return `Are you sure you want to delete stream: ${this.props.stream.title}?`\n  };\n\n  render() {\n\n    return (\n        <Modal\n          title=\"Delete Stream\"\n          content={this.renderContent()}\n          actions={this.renderActions()}\n          onClose={() => history.push('/')}\n        />\n  )};\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { stream: state.streams[ownProps.match.params.id] }\n};\n\nexport default connect(mapStateToProps, { fetchStream, deleteStream })(StreamDelete);\n"]},"metadata":{},"sourceType":"module"}