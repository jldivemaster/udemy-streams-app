{"ast":null,"code":"import _defineProperty from \"/Users/flatironschool/Development/projects/udemy-streams-app/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SIGN_IN, SIGN_OUT } from '../actions/types';\nconst INITIAL_STATE = {\n  isSignedIn: null,\n  userId: null\n};\nexport default ((state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SIGN_IN:\n      return _objectSpread({}, state, {\n        isSignedIn: true,\n        userId: action.payload\n      });\n\n    case SIGN_OUT:\n      return _objectSpread({}, state, {\n        isSignedIn: false\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/flatironschool/Development/projects/udemy-streams-app/client/src/reducers/authReducer.js"],"names":["SIGN_IN","SIGN_OUT","INITIAL_STATE","isSignedIn","userId","state","action","type","payload"],"mappings":";;;;;;AAAA,SAASA,OAAT,EAAkBC,QAAlB,QAAkC,kBAAlC;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,UAAU,EAAE,IADQ;AAEpBC,EAAAA,MAAM,EAAE;AAFY,CAAtB;AAKA,gBAAe,CAACC,KAAK,GAAGH,aAAT,EAAwBI,MAAxB,KAAmC;AAChD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKP,OAAL;AACE,+BAAYK,KAAZ;AAAmBF,QAAAA,UAAU,EAAE,IAA/B;AAAqCC,QAAAA,MAAM,EAAEE,MAAM,CAACE;AAApD;;AACF,SAAKP,QAAL;AACE,+BAAYI,KAAZ;AAAmBF,QAAAA,UAAU,EAAE;AAA/B;;AACF;AACE,aAAOE,KAAP;AANJ;AAQD,CATD","sourcesContent":["import { SIGN_IN, SIGN_OUT } from '../actions/types';\n\nconst INITIAL_STATE = {\n  isSignedIn: null,\n  userId: null\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch(action.type) {\n    case SIGN_IN:\n      return { ...state, isSignedIn: true, userId: action.payload };\n    case SIGN_OUT:\n      return { ...state, isSignedIn: false };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}