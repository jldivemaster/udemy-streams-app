{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Development/projects/udemy-streams-app/client/src/components/streams/StreamCreate.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass StreamCreate extends React.Component {\n  // ...formProps.input replaces value= and onChange= properties; also, formProps can be destructured.\n  renderInput(formProps) {\n    return React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, formProps.label), React.createElement(\"input\", Object.assign({}, formProps.input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, formProps.meta.error));\n  }\n\n  onSubmit() {// Redux form takes care of e.preventDefault for us, so no need to call it.\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"ui form\",\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"title\",\n      component: this.renderInput,\n      label: \"Enter Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"description\",\n      component: this.renderInput,\n      label: \"Enter Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"ui button primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.title) {\n    errors.title = \"You must enter a title\";\n  }\n\n  if (!formValues.description) {\n    errors.description = \"You must enter a description\";\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'streamCreate',\n  validate\n})(StreamCreate);","map":{"version":3,"sources":["/Users/flatironschool/Development/projects/udemy-streams-app/client/src/components/streams/StreamCreate.js"],"names":["React","Field","reduxForm","StreamCreate","Component","renderInput","formProps","label","input","meta","error","onSubmit","render","props","handleSubmit","validate","formValues","errors","title","description","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AAEzC;AACAC,EAAAA,WAAW,CAACC,SAAD,EAAY;AAErB,WACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQA,SAAS,CAACC,KAAlB,CADA,EAEE,+CAAWD,SAAS,CAACE,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMF,SAAS,CAACG,IAAV,CAAeC,KAArB,CAHF,CADF;AAOD;;AAEDC,EAAAA,QAAQ,GAAG,CACT;AAED;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACI;AAAM,MAAA,SAAS,EAAC,SAAhB;AAA0B,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKH,QAA7B,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAE,KAAKN,WAApC;AAAiD,MAAA,KAAK,EAAC,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,aAAZ;AAA0B,MAAA,SAAS,EAAE,KAAKA,WAA1C;AAAuD,MAAA,KAAK,EAAC,mBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,CADJ;AAMA;;AA1BuC;;AA6B3C,MAAMU,QAAQ,GAAIC,UAAD,IAAgB;AAC/B,QAAMC,MAAM,GAAG,EAAf;;AACA,MAAG,CAACD,UAAU,CAACE,KAAf,EAAqB;AACnBD,IAAAA,MAAM,CAACC,KAAP,GAAe,wBAAf;AACD;;AACD,MAAG,CAACF,UAAU,CAACG,WAAf,EAA4B;AAC1BF,IAAAA,MAAM,CAACE,WAAP,GAAqB,8BAArB;AACD;;AACD,SAAOF,MAAP;AACD,CATD;;AAWA,eAAef,SAAS,CAAC;AACvBkB,EAAAA,IAAI,EAAE,cADiB;AAEvBL,EAAAA;AAFuB,CAAD,CAAT,CAGZZ,YAHY,CAAf","sourcesContent":["import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass StreamCreate extends React.Component {\n\n  // ...formProps.input replaces value= and onChange= properties; also, formProps can be destructured.\n  renderInput(formProps) {\n\n    return (\n      <div className=\"field\">\n      <label>{formProps.label}</label>\n        <input {...formProps.input} />\n        <div>{formProps.meta.error}</div>\n      </div>\n    )\n  };\n\n  onSubmit() {\n    // Redux form takes care of e.preventDefault for us, so no need to call it.\n\n  }\n\n  render() {\n    return (\n        <form className=\"ui form\" onSubmit={this.props.handleSubmit(this.onSubmit)} >\n          <Field name=\"title\" component={this.renderInput} label=\"Enter Title\" />\n          <Field name=\"description\" component={this.renderInput} label=\"Enter Description\" />\n          <button className=\"ui button primary\">Submit</button>\n        </form>\n  )};\n}\n\nconst validate = (formValues) => {\n  const errors = {};\n  if(!formValues.title){\n    errors.title = \"You must enter a title\";\n  }\n  if(!formValues.description) {\n    errors.description = \"You must enter a description\";\n  }\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'streamCreate',\n  validate\n})(StreamCreate);\n"]},"metadata":{},"sourceType":"module"}